<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="calebdta" name="ArraysAndHashingT" tests="18" errors="0" failures="2" skipped="0" time="0.147" timestamp="2022-04-30T21:06:24">
          <properties>
      <property name="java.specification.version" value="18"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://openjdk.java.net/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-18-openjdk/lib"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="UTF-8"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2022-04-19"/><property name="java.home" value="/usr/lib/jvm/java-18-openjdk"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="UTF-8"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="18.0.1+10"/><property name="user.name" value="caleb"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/caleb/.cache/JNA/temp/jna12058980199965202369.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="18.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="native.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.vendor" value="N/A"/><property name="scala.ext.dirs" value="/home/caleb/.sbt/1.0/java9-rt-ext-n_a_18_0_1"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Australia/Perth"/><property name="java.vm.specification.version" value="18"/><property name="os.name" value="Linux"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="AU"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/caleb"/><property name="user.language" value="en"/><property name="sbt.script" value="/usr/bin/sbt"/><property name="swoval.tmpdir" value="/home/caleb/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.17.3-zen1-1-zen"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib32:/usr/lib/openmpi:/usr/lib/libfakeroot"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="user.dir" value="/home/caleb/dev/jvm/scala/leetcode"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="18.0.1+10"/><property name="java.class.version" value="62.0"/>
    </properties>
          <testcase classname="ArraysAndHashingT" name="217 - Contains Duplicates should Report false on the empty array" time="0.044">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="217 - Contains Duplicates should Be False on the array containing 0 - 100 inclusive" time="0.015">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="217 - Contains Duplicates should Be True for an array containing a single duplicate" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="217 - Contains Duplicates should Be true for multiple duplicates" time="0.0">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="217 - Contains Duplicates should be true for seperated duplications" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="242 - Valid Anagram should true for toyot" time="0.013">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="242 - Valid Anagram should false for car" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="1 - Two Sum should pairs togethor" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="1 - Two Sum should pairs apart" time="0.0">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="1 - Two Sum should default (0,0) if there is no match" time="0.0">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="49 - Group Anagrams should sort like anagrams" time="0.021">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="49 - Group Anagrams should respect an empty array" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="T347 - Top K Elements should determine top 2" time="0.005">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="T347 - Top K Elements should support 1 element" time="0.002">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="238 - Prodct of Array Except Self should work with division" time="0.007">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="238 - Prodct of Array Except Self should work with 0s" time="0.001">
                      
                    </testcase><testcase classname="ArraysAndHashingT" name="659 - Encode and Decode Strings should encode -&gt; decode a string with only alpha-numerics" time="0.032">
                      <failure message="Expected List(&quot;lint&quot;, &quot;code&quot;, &quot;love&quot;, &quot;you&quot;), but got List()" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Expected List(&quot;lint&quot;, &quot;code&quot;, &quot;love&quot;, &quot;you&quot;), but got List()
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:476)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:421)
	at org.scalatest.flatspec.AnyFlatSpec.newAssertionFailedException(AnyFlatSpec.scala:1685)
	at org.scalatest.Assertions.assertResultImpl(Assertions.scala:990)
	at org.scalatest.Assertions.org$scalatest$Assertions$$inline$assertResultImpl(Assertions.scala:986)
	at org.scalatest.Assertions.org$scalatest$Assertions$$inline$assertResultImpl$(Assertions.scala:421)
	at org.scalatest.flatspec.AnyFlatSpec.org$scalatest$Assertions$$inline$assertResultImpl(AnyFlatSpec.scala:1685)
	at ArraysAndHashingT.testFun$proxy17$1(ArraysAndHashingT.scala:91)
	at ArraysAndHashingT.$init$$$anonfun$17(ArraysAndHashingT.scala:86)
	at org.scalatest.Transformer.apply$$anonfun$1(Transformer.scala:22)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:31)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:21)
	at org.scalatest.flatspec.AnyFlatSpecLike$$anon$4.apply(AnyFlatSpecLike.scala:1697)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:138)
	at org.scalatest.flatspec.AnyFlatSpec.withFixture(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.invokeWithFixture$1(AnyFlatSpecLike.scala:1703)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest$$anonfun$1(AnyFlatSpecLike.scala:1707)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest(AnyFlatSpecLike.scala:1707)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.runTest(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests$$anonfun$1(AnyFlatSpecLike.scala:1765)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:413)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:427)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests(AnyFlatSpecLike.scala:1765)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.runTests(AnyFlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1112)
	at org.scalatest.Suite.run$(Suite.scala:563)
	at org.scalatest.flatspec.AnyFlatSpec.org$scalatest$flatspec$AnyFlatSpecLike$$super$run(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.run$$anonfun$1(AnyFlatSpecLike.scala:1810)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.flatspec.AnyFlatSpecLike.run(AnyFlatSpecLike.scala:1810)
	at org.scalatest.flatspec.AnyFlatSpecLike.run$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.run(AnyFlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:318)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:513)
	at sbt.TestRunner.runTest$1(TestFramework.scala:146)
	at sbt.TestRunner.run(TestFramework.scala:161)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:324)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:284)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFunction.apply(TestFramework.scala:336)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
</failure>
                    </testcase><testcase classname="ArraysAndHashingT" name="659 - Encode and Decode Strings should encode -&gt; decode a string that contains more than 10 letters in a single word" time="0.002">
                      <failure message="Expected List(&quot;lint&quot;, &quot;codingwiththebois&quot;, &quot;love&quot;, &quot;you&quot;), but got List()" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Expected List(&quot;lint&quot;, &quot;codingwiththebois&quot;, &quot;love&quot;, &quot;you&quot;), but got List()
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:476)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:421)
	at org.scalatest.flatspec.AnyFlatSpec.newAssertionFailedException(AnyFlatSpec.scala:1685)
	at org.scalatest.Assertions.assertResultImpl(Assertions.scala:990)
	at org.scalatest.Assertions.org$scalatest$Assertions$$inline$assertResultImpl(Assertions.scala:986)
	at org.scalatest.Assertions.org$scalatest$Assertions$$inline$assertResultImpl$(Assertions.scala:421)
	at org.scalatest.flatspec.AnyFlatSpec.org$scalatest$Assertions$$inline$assertResultImpl(AnyFlatSpec.scala:1685)
	at ArraysAndHashingT.testFun$proxy18$1(ArraysAndHashingT.scala:99)
	at ArraysAndHashingT.$init$$$anonfun$18(ArraysAndHashingT.scala:94)
	at org.scalatest.Transformer.apply$$anonfun$1(Transformer.scala:22)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:31)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:21)
	at org.scalatest.flatspec.AnyFlatSpecLike$$anon$4.apply(AnyFlatSpecLike.scala:1697)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:138)
	at org.scalatest.flatspec.AnyFlatSpec.withFixture(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.invokeWithFixture$1(AnyFlatSpecLike.scala:1703)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest$$anonfun$1(AnyFlatSpecLike.scala:1707)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest(AnyFlatSpecLike.scala:1707)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTest$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.runTest(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests$$anonfun$1(AnyFlatSpecLike.scala:1765)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:413)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine.traverseSubNodes$2$$anonfun$1(Engine.scala:427)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	at scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:429)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests(AnyFlatSpecLike.scala:1765)
	at org.scalatest.flatspec.AnyFlatSpecLike.runTests$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.runTests(AnyFlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1112)
	at org.scalatest.Suite.run$(Suite.scala:563)
	at org.scalatest.flatspec.AnyFlatSpec.org$scalatest$flatspec$AnyFlatSpecLike$$super$run(AnyFlatSpec.scala:1685)
	at org.scalatest.flatspec.AnyFlatSpecLike.run$$anonfun$1(AnyFlatSpecLike.scala:1810)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:535)
	at org.scalatest.flatspec.AnyFlatSpecLike.run(AnyFlatSpecLike.scala:1810)
	at org.scalatest.flatspec.AnyFlatSpecLike.run$(AnyFlatSpecLike.scala:51)
	at org.scalatest.flatspec.AnyFlatSpec.run(AnyFlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:318)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:513)
	at sbt.TestRunner.runTest$1(TestFramework.scala:146)
	at sbt.TestRunner.run(TestFramework.scala:161)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:324)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:284)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:324)
	at sbt.TestFunction.apply(TestFramework.scala:336)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>